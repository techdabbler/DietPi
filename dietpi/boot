#!/bin/bash
{
	#////////////////////////////////////
	# DietPi Boot Script
	#
	#////////////////////////////////////
	# Created by Daniel Knight / daniel.knight@dietpi.com / dietpi.com
	#
	#////////////////////////////////////
	#
	# Info:
	# - filename /DietPi/dietpi/boot
	# - activates on boot from /etc/init.d/dietpi-service
	#////////////////////////////////////

	#Force en_GB Locale for whole script. Prevents incorrect parsing with non-english locales.
	LANG=en_GB.UTF-8

	#Ensure we are in users home dir: https://github.com/Fourdee/DietPi/issues/905#issuecomment-298223705
	cd "$HOME"

	#/////////////////////////////////////////////////////////////////////////////////////
	#Globals
	#/////////////////////////////////////////////////////////////////////////////////////
	FP_LOGFILE='/var/log/dietpi-boot.log'

	HW_MODEL=0
	DISTRO=0
	HW_CPUID=0

	FS_FORCED_EXPANSION=$(cat /DietPi/dietpi.txt | grep -m1 '^fs_force_resize=' | sed 's/.*=//')

	# -3 = first boot / -2 = partition / -1 = filesystem / 0 = run dietpi-software at login / 1 = completed
	DIETPI_INSTALL_STAGE=$(cat /DietPi/dietpi/.install_stage)

	Read_Hw_Model(){

		HW_MODEL=$(sed -n 1p /DietPi/dietpi/.hw_model)
		DISTRO=$(sed -n 3p /DietPi/dietpi/.hw_model)
		HW_CPUID=$(sed -n 9p /DietPi/dietpi/.hw_model)

	}

	RPi_Set_Clock_Speeds(){

		#RPi's
		if (( $HW_MODEL < 10 )); then

			#If no overclocking is set. set values to current (used in dietpi-config as reference for overclocking / current values)
			if (( $(cat /DietPi/config.txt | grep -ci -m1 '^#over_voltage=') &&
				$(cat /DietPi/config.txt | grep -ci -m1 '^#arm_freq=') &&
				$(cat /DietPi/config.txt | grep -ci -m1 '^#core_freq=') &&
				$(cat /DietPi/config.txt | grep -ci -m1 '^#sdram_freq=') )); then

				#RPi v1 - Set safe clock
				if (( $HW_MODEL < 2 )); then

					sed -i '/over_voltage=/c\over_voltage=2' /DietPi/config.txt
					sed -i '/arm_freq=/c\arm_freq=900' /DietPi/config.txt
					sed -i '/core_freq=/c\#core_freq=250' /DietPi/config.txt
					sed -i '/sdram_freq=/c\#sdram_freq=400' /DietPi/config.txt

					#Zero
					if (( $(sed -n 2p /DietPi/dietpi/.hw_model | tr '[:upper:]' '[:lower:]' | grep -ci -m1 'rpi zero') )); then

						sed -i '/over_voltage=/c\#over_voltage=0' /DietPi/config.txt
						sed -i '/arm_freq=/c\#arm_freq=1000' /DietPi/config.txt
						sed -i '/core_freq=/c\#core_freq=400' /DietPi/config.txt
						sed -i '/sdram_freq=/c\#sdram_freq=450' /DietPi/config.txt

					fi

				#RPi v2
				elif (( $HW_MODEL == 2 )); then

					sed -i '/over_voltage=/c\#over_voltage=0' /DietPi/config.txt
					sed -i '/arm_freq=/c\#arm_freq=900' /DietPi/config.txt
					sed -i '/core_freq=/c\#core_freq=250' /DietPi/config.txt
					sed -i '/sdram_freq=/c\#sdram_freq=450' /DietPi/config.txt

				#RPi v3
				elif (( $HW_MODEL == 3 )); then

					sed -i '/over_voltage=/c\#over_voltage=0' /DietPi/config.txt
					sed -i '/arm_freq=/c\#arm_freq=1200' /DietPi/config.txt
					sed -i '/core_freq=/c\#core_freq=400' /DietPi/config.txt
					sed -i '/sdram_freq=/c\#sdram_freq=450' /DietPi/config.txt
					sed -i "/temp_limit=/c\temp_limit=75" /DietPi/config.txt # https://github.com/Fourdee/DietPi/issues/356

				fi

			fi

		fi
	}

	FS_Partition(){

		#Force filesystem sync
		sync

		local rootfs_resize_limit=$(cat /DietPi/dietpi.txt | grep -m1 '^rootfs_resize_limit=' | sed 's/.*=//')

		local target_partition=$(findmnt / -o source -n | sed 's/.*p//')
		local target_dev=$(findmnt / -o source -n)

		# - MMCBLK[0-9]p[0-9] scrape
		if [[ "$target_dev" = *"mmcblk"* ]]; then

			target_dev=$(findmnt / -o source -n | sed 's/p[0-9]$//')

		# - Everything else scrape (eg: /dev/sdX[0-9])
		else

			target_dev=$(findmnt / -o source -n | sed 's/[0-9]$//')

		fi

		if (( $rootfs_resize_limit < 100 )); then

			parted -s $target_dev unit % resizepart $target_partition $rootfs_resize_limit% || parted $target_dev unit % resizepart $target_partition Yes $rootfs_resize_limit%

		else

			cat << _EOF_ | fdisk $target_dev
p
d
$target_partition
n
p
$target_partition
$(parted $target_dev -ms unit s p | grep ':ext4::;' | sed 's/:/ /g' | sed 's/s//g' | awk '{ print $2 }')

p
w

_EOF_

		fi

	}

	FS_Expand(){

		#Force filesystem sync
		sync

		#Resize RootFS to new partition size
		local target_dev=$(findmnt / -o source -n)
		resize2fs $target_dev

	}

	Apply_DietPi_FirstRun_Settings(){

		#----------------------------------------------------------------
		# Network
		local index_eth=$(sed -n 1p /DietPi/dietpi/.network)
		local index_wlan=$(sed -n 2p /DietPi/dietpi/.network)

		systemctl stop networking.service

		#Kill dhclient
		killall -w dhclient

		#Drop Connections
		ifdown eth"$index_eth"
		ifdown wlan"$index_wlan"

		#Replace all eth0 and wlan0 values to the indexs DietPi has found.
		sed -i "s/eth0/eth$index_eth/g" /etc/network/interfaces
		sed -i "s/wlan0/wlan$index_wlan/g" /etc/network/interfaces

		#Grab user requested settings from /dietpi.txt
		local Ethernet_Enabled=$(cat /DietPi/dietpi.txt | grep -ci -m1 'Ethernet_Enabled=1')
		local Wifi_Enabled=$(cat /DietPi/dietpi.txt | grep -ci -m1 'Wifi_Enabled=1')

		local Wifi_SSID=$(cat /DietPi/dietpi.txt | grep -m1 '^Wifi_SSID' | sed 's/.*=//')
		local Wifi_KEY=$(cat /DietPi/dietpi.txt | grep -m1 '^Wifi_KEY' | sed 's/.*=//')

		local Use_Static=$(cat /DietPi/dietpi.txt | grep -ci -m1 '^Use_Static=1')
		local Static_IP=$(cat /DietPi/dietpi.txt | grep -m1 '^Static_IP' | sed 's/.*=//')
		local Static_Mask=$(cat /DietPi/dietpi.txt | grep -m1 '^Static_Mask' | sed 's/.*=//')
		local Static_Gateway=$(cat /DietPi/dietpi.txt | grep -m1 '^Static_Gateway' | sed 's/.*=//')
		local Static_Dns=$(cat /DietPi/dietpi.txt | grep -m1 '^Static_DNS' | sed 's/.*=//')

		# - Wifi
		if (( $Wifi_Enabled == 1 )); then

			#Enable Wlan, disable Eth
			Ethernet_Enabled=0
			sed -i "/allow-hotplug wlan/c\allow-hotplug wlan$index_wlan" /etc/network/interfaces
			sed -i "/allow-hotplug eth/c\#allow-hotplug eth$index_eth" /etc/network/interfaces
			#Set SSid
			sed -i "/wireless-essid/c\wireless-essid $Wifi_SSID" /etc/network/interfaces
			sed -i "/wpa-ssid/c\wpa-ssid $Wifi_SSID" /etc/network/interfaces
			#Set Key
			sed -i "/wireless-key/c\wireless-key $Wifi_KEY" /etc/network/interfaces
			sed -i "/wpa-psk/c\wpa-psk $Wifi_KEY" /etc/network/interfaces

			/DietPi/dietpi/func/dietpi-set_hardware wifi enable

		# - Ethernet
		elif (( $Ethernet_Enabled == 1 )); then

			#Enable Eth, disable Wlan
			Wifi_Enabled=0
			sed -i "/allow-hotplug eth/c\allow-hotplug eth$index_eth" /etc/network/interfaces
			sed -i "/allow-hotplug wlan/c\#allow-hotplug wlan$index_wlan" /etc/network/interfaces

		fi

		# - Static IPs
		if (( $Use_Static == 1 )); then

			#enable dns-nameservers
			sed -i 's/^#dns-nameservers/dns-nameservers/g' /etc/network/interfaces

			if (( $Wifi_Enabled == 1 )); then

				sed -i "/iface wlan/c\iface wlan$index_wlan inet static" /etc/network/interfaces

			elif (( $Ethernet_Enabled == 1 )); then

				sed -i "/iface eth/c\iface eth$index_eth inet static" /etc/network/interfaces

			fi

			sed -i "/address/c\address $Static_IP" /etc/network/interfaces
			sed -i "/netmask/c\netmask $Static_Mask" /etc/network/interfaces
			sed -i "/gateway/c\gateway $Static_Gateway" /etc/network/interfaces
			sed -i "/dns-nameservers/c\dns-nameservers $Static_Dns" /etc/network/interfaces

		fi

		#Kill dhclient, again: https://github.com/Fourdee/DietPi/issues/660
		killall -w dhclient

		#Restart Networking
		systemctl daemon-reload
		systemctl restart networking

		#Manually bring up adapters (just incase)
		if (( $Wifi_Enabled == 1 )); then

			ifup wlan"$index_wlan"

		elif (( $Ethernet_Enabled == 1 )); then

			ifup eth"$index_eth"

		fi

		#Apply forced eth speed if set in dietpi.txt
		/DietPi/dietpi/func/dietpi-set_hardware eth-forcespeed $(cat /DietPi/dietpi.txt | grep -m1 '^Ethernet_Force_Speed=' | sed 's/.*=//' )

		#Wait for active connection, then update network details file
		Wait_For_Valid_Network_Connection

	}

	Wait_For_Valid_Network_Connection(){

		#Attempt to wait for a valid network connection
		local max_loops=1

		#	Wait mode, max time
		local boot_wait_for_network=$(cat /DietPi/dietpi.txt | grep -m1 '^boot_wait_for_network=' | sed 's/.*=//')
		if (( $boot_wait_for_network == 1 )); then

			max_loops=10

		fi

		local loop_count=0
		while true
		do

			if (( $loop_count >= $max_loops )); then

				/DietPi/dietpi/func/dietpi-notify 1 "$(date) | Valid connection wait timed out." | tee -a "$FP_LOGFILE"
				break

			elif (( ! $(route | awk '{print $4}' | grep -ci -m1 'UG') )); then

				/DietPi/dietpi/func/dietpi-notify 2 "$(date) | Waiting for valid connection, before continuing boot | Mode=$boot_wait_for_network" | tee -a "$FP_LOGFILE"
				sleep 1

			else

				# - Update network details (for IP in dietpi-banner etc..)
				/DietPi/dietpi/func/dietpi-notify 0 "$(date) | Valid connection found." | tee -a "$FP_LOGFILE"
				/DietPi/dietpi/func/obtain_network_details

				#	Mount all drives again (eg: network shares)
				mount -a

				break

			fi

			if (( $boot_wait_for_network != 2 )); then

				((loop_count++))

			fi

		done

	}

	Run_Init(){

		#----------------------------------------------------------------
		#Update NTP
		/DietPi/dietpi/func/run_ntpd &
		#----------------------------------------------------------------
		#Write HW model and details to file
		/DietPi/dietpi/dietpi-obtain_hw_model
		#Read Hw model
		Read_Hw_Model
		#----------------------------------------------------------------
		#Apply LED triggers if set
		/DietPi/dietpi/func/dietpi-led_control 1 &
		#----------------------------------------------------------------
		#Set CRDA Country code
		local wifi_country_code=$(cat /DietPi/dietpi.txt | grep -m1 '^wifi_country_code=' | sed 's/.*=//')
		if [ -n "$wifi_country_code" ]; then

			/DietPi/dietpi/func/dietpi-set_hardware wificountrycode "$wifi_country_code" &

		fi
		#----------------------------------------------------------------
		#RPi set volume to -0.1db | We have to do it here because sound card modules (dietpi-set_hardware) are not enabled on the fly, requires a reboot.
		if (( $HW_MODEL < 10 )); then

			amixer set PCM -- -010 &> /dev/null &

		fi
		#----------------------------------------------------------------
		#Apply DietPi CPU Governor and settings
		/DietPi/dietpi/dietpi-cpu_set &
		#----------------------------------------------------------------
		#Disable RPi hdmi output if set in dietpi.txt
		if (( $HW_MODEL < 10 &&
			$(cat /DietPi/dietpi.txt | grep -ci -m1 '^rpi_hdmi_output=0'))); then

			#FBset value below allows for reduced memory bandwidth usage from VideoCore (eg: Faster RAM bandwidth/performance)
			fbset -xres 16 -yres 16 -vxres 16 -vyres 16 -depth 8 &> /dev/null
			/opt/vc/bin/tvservice -o &> /dev/null

		fi
		#----------------------------------------------------------------
		#Find first index number for network devices (checks 0-9)
		/DietPi/dietpi/func/obtain_network_details
		#----------------------------------------------------------------
		#Ensure DietPi login and banner scripts always exists (eg: if user disables it)
		if (( $(grep -ci -m1 '^/DietPi/dietpi/login' /root/.bashrc) == 0 )); then

			echo -e "/DietPi/dietpi/login" >> /root/.bashrc

		fi
		#----------------------------------------------------------------
		# - Lower dmesg print level (mostly for Odroid C2 where HiFi Shield prints info when starting/stopping stream on tty1)
		dmesg -n 1
		#----------------------------------------------------------------
		Workaround_WiFi
		#----------------------------------------------------------------

	}

	Workaround_WiFi(){

		#Workaround: Wlan currently fails to connect during boot, so, manually drop and reconnect: https://github.com/Fourdee/DietPi/issues/602#issuecomment-262806470
		#	OPi Zero 2 / Neo Air
		if (( $HW_MODEL == 35 || $HW_MODEL == 64 )); then

			ifdown wlan0
			ifup wlan0

		fi

	}

	#/////////////////////////////////////////////////////////////////////////////////////
	# Main Loop
	#/////////////////////////////////////////////////////////////////////////////////////

	#----------------------------------------------------------------
	# Init
	Run_Init

	#----------------------------------------------------------------
	#Filesystem expansion only (eg: for pre-installed images)
	if (( $FS_FORCED_EXPANSION == 1 )); then

		FS_Partition

		sed -i '/fs_force_resize=/c\fs_force_resize=2' /DietPi/dietpi.txt

		reboot

	#----------------------------------------------------------------
	#Normal Boot
	elif (( $DIETPI_INSTALL_STAGE == 1 )); then

		if (( $FS_FORCED_EXPANSION == 2 )); then

			FS_Expand

			sed -i '/fs_force_resize=/c\fs_force_resize=0' /DietPi/dietpi.txt

			/DietPi/dietpi/func/dietpi-set_dphys-swapfile $(cat /DietPi/dietpi.txt | grep -m1 '^Swapfile_Size=' | sed 's/.*=//' )

		fi

		Wait_For_Valid_Network_Connection

		if (( $( cat /DietPi/dietpi.txt | grep -ci -m1 '^dietpi_check_for_updates=1') )); then

			#Check for DietPi updates (+thread)
			echo -e "$(date) | +Thread: checking for DietPi-Updates" >> "$FP_LOGFILE"
			/DietPi/dietpi/dietpi-update 2 &> /dev/null &

		fi

		/DietPi/dietpi/dietpi-banner 1

	#----------------------------------------------------------------
	#Filesystem prep, stage 1/2
	elif (( $DIETPI_INSTALL_STAGE == -3 )); then

		# Set RPi v1 safe overclocking profile (900mhz)
		RPi_Set_Clock_Speeds

		/DietPi/dietpi/dietpi-banner 0

		#Set hostname
		/DietPi/dietpi/func/change_hostname "$(cat /DietPi/dietpi.txt | grep -m1 '^Hostname=' | sed 's/.*=//')"

		#Automation
		# - Set auto login for next bootup
		if (( $(cat /DietPi/dietpi.txt | grep -m1 '^AUTO_Install_Enable=' | sed 's/.*=//') >= 1 )); then

			/DietPi/dietpi/dietpi-autostart 7

		fi

		# - Enable serial console?
		if (( $(cat /DietPi/dietpi.txt | grep -ci -m1 '^serial_console_enabled=1') )); then

			/DietPi/dietpi/func/dietpi-set_hardware serialconsole enable

		fi

		# - Set root password?
		root_password=$(cat /DietPi/dietpi.txt | grep -m1 '^AUTO_Global_Password=' | sed 's/.*=//')
		if [ -n "$root_password" ]; then

			chpasswd <<< "root:$root_password"
			chpasswd <<< "dietpi:$root_password"

		fi

		# - Set apt mirror
		local target_repo='Apt_Debian_Mirror'
		if (( $HW_MODEL < 10 )); then

			target_repo='Apt_Raspbian_Mirror'

		fi

		/DietPi/dietpi/func/dietpi-set_software apt-mirror $(cat /DietPi/dietpi.txt | grep -m1 "^$target_repo=" | sed 's/.*=//')

		# - Set NTPD mirror
		/DietPi/dietpi/func/dietpi-set_software ntpd-mirror $(cat /DietPi/dietpi.txt | grep -m1 '^NTPD_Mirror=' | sed 's/.*=//')

		#Disable /tmp tmpfs if RAM <= 512MB: https://github.com/Fourdee/DietPi/issues/1027
		if (( $(free -m | grep -m1 'Mem:' | awk '{print $2}') <= 512 )); then

			sed -i -e "\@[[:space:]]/tmp[[:space:]]@s@^#*@#@" /etc/fstab
			systemctl daemon-reload
			mount -a

		fi

		FS_Partition

		echo -2 > /DietPi/dietpi/.install_stage

		reboot

	#----------------------------------------------------------------
	#Filesystem prep, stage 2/2
	elif (( $DIETPI_INSTALL_STAGE == -2 )); then

		#Expand rootFS
		FS_Expand
		echo -1 > /DietPi/dietpi/.install_stage

		#Enable/Create swapfile.
		/DietPi/dietpi/func/dietpi-set_dphys-swapfile $(cat /DietPi/dietpi.txt | grep -m1 '^Swapfile_Size=' | sed 's/.*=//' )

		#Generate unique Dropbear host-key:
		rm /etc/dropbear/*key &> /dev/null
		dropbearkey -t rsa -f /etc/dropbear/dropbear_rsa_host_key &> /dev/null

		#Activate DietPi Boot Loader User Settings and bring up network (dietpi.txt)
		Apply_DietPi_FirstRun_Settings

		Workaround_WiFi

		#Finished
		/DietPi/dietpi/dietpi-banner 0
		echo -e " Default Login:\n Username = root\n Password = dietpi\n"

		#Set Install Stage index to trigger DietPi-Software installation on login
		echo 0 > /DietPi/dietpi/.install_stage

	fi

	#-----------------------------------------------------------------------------------
	exit
	#-----------------------------------------------------------------------------------
}