#!/bin/bash
{
	#////////////////////////////////////
	# DietPi Login Script
	#
	#////////////////////////////////////
	# Created by Daniel Knight / daniel.knight@dietpi.com / dietpi.com
	#
	#////////////////////////////////////
	#
	# Info:
	# - filename /DietPi/dietpi/login
	# - activates on login /root/.bashrc
	# - requires /DietPi/dietpi/.install_stage to have a value of 0 for it to run /DietPi/dietpi/dietpi-software (active after /dietpi/boot has completed filesystem expansion)
	#////////////////////////////////////

	#Force en_GB Locale for whole script. Prevents incorrect parsing with non-english locales.
	LANG=en_GB.UTF-8

	#Ensure we are in users home dir: https://github.com/Fourdee/DietPi/issues/905#issuecomment-298223705
	cd "$HOME"

	#Exit Paths
	# - SCP connection exit path. Fix for dumb or unset TERM provided by tdaitx
	export TERM=${TERM:-dumb}
	if [ "$TERM" = "dumb" ]; then
		exit
	fi

	# - Exit path for non-root logins.
	if (( $UID != 0 )); then

		/DietPi/dietpi/func/dietpi-notify 1 'Error: Root privileges required. Please run the command with "sudo"\n'
		exit

	fi

	#/////////////////////////////////////////////////////////////////////////////////////
	#Globals
	#/////////////////////////////////////////////////////////////////////////////////////
	HW_MODEL=$(sed -n 1p /DietPi/dietpi/.hw_model)
	DISTRO=$(sed -n 3p /DietPi/dietpi/.hw_model)
	DIETPI_INSTALL_STAGE=$(cat /DietPi/dietpi/.install_stage)

	#/////////////////////////////////////////////////////////////////////////////////////
	#DietPi-Autostart
	#/////////////////////////////////////////////////////////////////////////////////////
	# 0=console / 1=kodi-standalone / 2=startx lxde / 3=emulationstation
	AUTO_START_INDEX=$(cat /DietPi/dietpi/.dietpi-autostart_index)

	#Autoboot
	Run_AutoStart(){

		#Do we have a valid screen for autoboot?
		local screen_valid=0

		#OrangePi
		# if (( $HW_MODEL >= 30 && $HW_MODEL < 40 )); then
			# if [ "$(tty)" = "/dev/pts/0" ]; then
				# screen_valid=1
			# fi

		if [ -z "$DISPLAY" ] && [ "$(tty)" = "/dev/tty1" ]; then

			screen_valid=1

		fi

		#Boot to specific Program
		if (( $screen_valid == 1 )); then

			#Kodi
			if (( $AUTO_START_INDEX == 1 )); then

				/DietPi/dietpi/misc/start_kodi

			#Desktop (LXDE/MATE etc)
			elif (( $AUTO_START_INDEX == 2 )); then

				startx

			#RetroPie/Emulation station
			elif (( $AUTO_START_INDEX == 3 )); then

				#emulationstation - can no longer be run as root
				/opt/retropie/supplementary/emulationstation/emulationstation.sh

			#OpenTyrian
			elif (( $AUTO_START_INDEX == 4 )); then

				/usr/local/games/opentyrian/run

			#DietPi-Cloudshell
			elif (( $AUTO_START_INDEX == 5 )); then

				#Launch DietPi-Cloudshell
				setterm --blank 0 --powersave off --cursor off
				systemctl start dietpi-cloudshell

			#Amiberry standard boot
			elif (( $AUTO_START_INDEX == 8 )); then

				systemctl start amiberry.service

			#DXX-Rebirth
			elif (( $AUTO_START_INDEX == 9 )); then

				#wait for rc.local to finish
				local max_seconds=15
				local current_seconds=0
				while (( ! $(systemctl status rc-local.service | grep -ci -m1 'exited') ))
				do

					sleep 1
					((current_seconds++))

					#max loop limit
					if (( $current_seconds >= $max_seconds )); then

						break

					fi

				done

				/mnt/dietpi_userdata/dxx-rebirth/run.sh

			#CAVA
			elif (( $AUTO_START_INDEX == 10 )); then

				# wait for rc.local to finish
				while (( ! $(systemctl status rc-local.service | grep 'Active' | grep -ci -m1 '(exited)') ))
				do

					sleep 1

				done

				# wait for MPD fifo to start
				sleep 4

				setterm --blank 0 --powersave off
				cava

			#Chromium
			elif (( $AUTO_START_INDEX == 11 )); then

				xinit chromium

			#Amiberry SDL2 standard boot
			elif (( $AUTO_START_INDEX == 13 )); then

				systemctl start amiberry-sdl2.service

			#JRiver
			elif (( $AUTO_START_INDEX == 15 )); then

				xinit mediacenter22

			#LightDM
			elif (( $AUTO_START_INDEX == 16 )); then

				/usr/sbin/lightdm

			fi

		fi

	}

	#/////////////////////////////////////////////////////////////////////////////////////
	# Main Loop
	#/////////////////////////////////////////////////////////////////////////////////////
	#Precaution: Wait for DietPi Ramdisk to finish
	while [ ! -f /DietPi/.ramdisk ]
	do

		/DietPi/dietpi/func/dietpi-notify 2 "Waiting for DietPi-RAMDISK to finish mounting DietPi to RAM..."
		sleep 1

	done

	#Update network details for banner IP address.
	/DietPi/dietpi/func/obtain_network_details

	#----------------------------------------------------------------
	#Normal Login
	if (( $DIETPI_INSTALL_STAGE == 1 )); then

		/DietPi/dietpi/dietpi-banner 1

		if (( $AUTO_START_INDEX > 0 )); then

			Run_AutoStart

		fi

	#----------------------------------------------------------------
	#Run DietPi-Software (1st run setup)
	elif (( $DIETPI_INSTALL_STAGE == 0 )); then

		/DietPi/dietpi/dietpi-banner 0

		#Wait for DietPi-Software if already running, else run it
		while (( $(ps aux | grep -ci -m1 '/DietPi/dietpi/[d]ietpi-software') ))
		do

			# - Automated
			if (( $(cat /DietPi/dietpi.txt | grep -ci -m1 '^AUTO_Install_Enable=1') )); then

				/DietPi/dietpi/func/dietpi-notify 2 'DietPi is currently installing and configuring your system. Please wait for this to complete, check back later.'


			else

				/DietPi/dietpi/func/dietpi-notify 2 'DietPi-Software is already running on another terminal/screen. Please complete or exit, before continuing.'

			fi

			sleep 2

		done

		#Start DietPi-Software if required
		DIETPI_INSTALL_STAGE=$(cat /DietPi/dietpi/.install_stage)
		if (( $DIETPI_INSTALL_STAGE == 0 )); then

			/DietPi/dietpi/dietpi-software

		fi

	#----------------------------------------------------------------
	#DietPi finishing up bootloader.
	elif (( $DIETPI_INSTALL_STAGE == -1 )); then

		/DietPi/dietpi/dietpi-banner 0
		echo -e " >> DietPi System prep is nearly completed: \n Please run /DietPi/dietpi/login after a few seconds"

	#----------------------------------------------------------------
	#DietPi running filesystem prep
	else

		/DietPi/dietpi/dietpi-banner 0
		echo -e " >> Filesystem prep has not yet completed: \n Please wait for the system to reboot "

	fi

	#-----------------------------------------------------------------------------------
	exit
	#-----------------------------------------------------------------------------------
}
