#!/bin/bash
{
	#////////////////////////////////////
	# DietPi Services Script
	#
	#////////////////////////////////////
	# Created by Daniel Knight / daniel.knight@dietpi.com / dietpi.com
	#
	# Info:
	# - Allows service control for all listed programs used in dietpi-software
	# - Disable removes the autostart from init.d and systemD. This allows DietPi to control program services below.
	#
	# Usage:
	# - /DietPi/dietpi/dietpi-services start/stop/restart/disable
	#////////////////////////////////////

	#Force en_GB Locale for whole script. Prevents incorrect parsing with non-english locales.
	LANG=en_GB.UTF-8

	#Ensure we are in users home dir: https://github.com/Fourdee/DietPi/issues/905#issuecomment-298223705
	cd "$HOME"

	INPUT_MODE="$1"

	DISTRO=$(sed -n 3p /DietPi/dietpi/.hw_model)

	aSERVICE_NAME=(
		'cron'
		'transmission-daemon'
		'proftpd'
		'smbd'
		'nmbd'
		'nfs-kernel-server'
		'vsftpd'
		'apache2'
		'nginx'
		'lighttpd'
		'php5-fpm'
		'php7.0-fpm'
		'mysql'
		'mpd'
		'ympd'
		'minidlna'
		'noip2'
		'grasshopper'
		'dnsmasq'
		'pihole-FTL'
		'subsonic'
		'webiopi'
		'haproxy'
		'fail2ban'
		'openvpn'
		'isc-dhcp-server'
		'hostapd'
		'avahi-daemon'
		'shairport-sync'
		'squeezelite'
		'mopidy'
		#'mariadb' #: https://github.com/Fourdee/DietPi/issues/1000#issuecomment-307760517
		'redis-server'
		'emonhub'
		'netdata'
		'mumble-server'
		'emby-server'
		'plexmediaserver'
		'cuberite'
		'supervisor'
		'gogs'
		'qbittorrent'
		'syncthing'
		'syncthing-inotify'
		'rtorrent'
		'urbackupsrv'
		'sickrage'
		'roonbridge'
		'mosquitto'
		'networkaudiod'
		'node-red'
		'tomcat8'
		'rpimonitor'
		'openmediavault-engined'
		'blynkserver'
		'aria2'
		'yacy'
		'tonido'
		'icecast2'
		'darkice'
		'motioneye'
		'cups'
		'cloudprintd'
		'virtualhere'
		'sabnzbd'
		'spotify-connect-web'
		'couchpotato'
		'koel'
		'sonarr'
		'radarr'
		'plexpy'
		'jackett'
		'nzbget'
		'octoprint'
		'roonserver'
		'htpc-manager'
		'home-assistant'
		'openbazaar'
		'dietpi-wifi-monitor'
		'bdd'
		'minio'
	)

	# - User: read custom services file
	FP_INCLUDE_SERVICES='/DietPi/dietpi/.dietpi-services_include'
	if [ -f "$FP_INCLUDE_SERVICES" ]; then

		while read line
		do

			index=${#aSERVICE_NAME[@]}
			aSERVICE_NAME[$index]="$line"

		done < "$FP_INCLUDE_SERVICES"

	fi

	aSERVICE_AVAILABLE=0
	for ((i=0; i<${#aSERVICE_NAME[@]}; i++))
	do
		aSERVICE_AVAILABLE[$i]=0

	done

	#Check if service name is available on system.
	Populate_Available_Array()
	{

		#Find dpkg program names
		dpkg --get-selections | awk '{print $1}' > "$FP_TEMP"

		for ((i=0; i<${#aSERVICE_NAME[@]}; i++))
		do

			if [ -f /etc/systemd/system/${aSERVICE_NAME[$i]}.service ] ||
				[ -f /lib/systemd/system/${aSERVICE_NAME[$i]}.service ]; then

				aSERVICE_AVAILABLE[$i]=1

			elif [ -f /etc/init.d/${aSERVICE_NAME[$i]} ]; then

				aSERVICE_AVAILABLE[$i]=1

			# - Check dpkg for matching packages.
			elif (( $(grep -ci -m1 "^${aSERVICE_NAME[$i]}$" "$FP_TEMP") )); then

				aSERVICE_AVAILABLE[$i]=1

			fi

		done

	}

	Print_Status()
	{

		#$1 = name
		#$2 = exit code

		#	NB: SystemD exit code 5 = not loaded/active, so dont trigger a failed result.

		#ok
		if (( $2 == 0 || $2 == 5 )); then

			echo -e "\e[1A$(/DietPi/dietpi/func/dietpi-notify 0)\e[0m $1"

		#failed
		else

			echo -e "\e[1A$(/DietPi/dietpi/func/dietpi-notify 1)\e[0m $1"

		fi

	}

	FP_TEMP="/tmp/.dietpi-services_installed"

	#/////////////////////////////////////////////////////////////////////////////////////
	# Main
	#/////////////////////////////////////////////////////////////////////////////////////
	#Info
	/DietPi/dietpi/func/dietpi-notify 3 DietPi-Services "$INPUT_MODE"

	#Obtain an array of available services installed on system.
	Populate_Available_Array

	#-----------------------------------------------------------------------------------
	#disable/enable
	if [ "$INPUT_MODE" = "disable" ] ||
		[ "$INPUT_MODE" = "enable" ]; then

		for ((i=0; i<${#aSERVICE_NAME[@]}; i++))
		do

			#Apply
			if (( ${aSERVICE_AVAILABLE[$i]} == 1 )); then

				echo -e "${aSERVICE_NAME[$i]}"

				systemctl $1 ${aSERVICE_NAME[$i]} &> /dev/null

				Print_Status ${aSERVICE_NAME[$i]} $?

			fi

		done

		systemctl daemon-reload &> /dev/null

		echo -e ""

	#-----------------------------------------------------------------------------------
	#status
	elif [ "$INPUT_MODE" = "status" ]; then

		for ((i=0; i<${#aSERVICE_NAME[@]}; i++))
		do

			#Apply
			if (( ${aSERVICE_AVAILABLE[$i]} == 1 )); then

				echo -e "${aSERVICE_NAME[$i]}\t$(systemctl status "${aSERVICE_NAME[$i]}" | grep Active | cut -c12-)"

			fi

		done

		echo -e ""

	#-----------------------------------------------------------------------------------
	#start/stop/restart
	elif [ "$INPUT_MODE" = "start" ] ||
		[ "$INPUT_MODE" = "stop" ] ||
		[ "$INPUT_MODE" = "restart" ]; then

		#????????????????????????????????????????????????????????????????????????
		# Although this allows for simple service control without using SystemD, we really should convert these to SystemD services. To keep everything consistent, clean, and obtain a correct exit code.
		#DietPi: Non-service based control for specific dietpi-software installed programs.
		# - Start order first
		index=0
		aDIETPISERVICE_FP=()
		aDIETPISERVICE_NAME=()
		aDIETPISERVICE_NAME[$index]='BruteFIR';aDIETPISERVICE_FP[$index]='/etc/dietpi/dietpi-software/services/brutefir.service';((index++));
		aDIETPISERVICE_NAME[$index]='JackD';aDIETPISERVICE_FP[$index]='/etc/dietpi/dietpi-software/services/jackd.service';((index++));
		aDIETPISERVICE_NAME[$index]='Jconvolver';aDIETPISERVICE_FP[$index]='/etc/dietpi/dietpi-software/services/jconvolver.service';((index++));

		for ((i=0; i<${#aDIETPISERVICE_NAME[@]}; i++))
		do

			if [ -f ${aDIETPISERVICE_FP[$i]} ]; then

				echo -e "${aDIETPISERVICE_NAME[$i]}"

				${aDIETPISERVICE_FP[$i]} $INPUT_MODE &> /dev/null
				Print_Status ${aDIETPISERVICE_NAME[$i]} $?

			fi

		done

		unset aDIETPISERVICE_NAME
		unset aDIETPISERVICE_FP
		#????????????????????????????????????????????????????????????????????????

		#### ALLO Special ####
		aALLO_EXCLUDED_SERVICES_DURING_STOP=(
			'apache2'
			'nginx'
			'lighttpd'
			'php5-fpm'
			'php7.0-fpm'
			'mysql'
			'avahi-daemon'
		)
		#### ALLO Special ####

		#Linux: installed services
		for ((i=0; i<${#aSERVICE_NAME[@]}; i++))
		do

			#### ALLO Special ####
			# - Allo web interface image: Exclude stop on aALLO_EXCLUDED_SERVICES_DURING_STOP service list
			if [ -d /var/www/allo ] && [ "$INPUT_MODE" = "stop" ]; then

				for ((j=0; j<${#aALLO_EXCLUDED_SERVICES_DURING_STOP[@]}; j++))
				do

					if [ "${aSERVICE_NAME[$i]}" = "${aALLO_EXCLUDED_SERVICES_DURING_STOP[$j]}" ]; then

						aSERVICE_AVAILABLE[$i]=0
						break

					fi

				done

			fi
			#### ALLO Special ####

			#Apply
			if (( ${aSERVICE_AVAILABLE[$i]} == 1 )); then

				echo -e "${aSERVICE_NAME[$i]}"

				systemctl $INPUT_MODE ${aSERVICE_NAME[$i]} &> /dev/null

				Print_Status ${aSERVICE_NAME[$i]} $?

			fi

		done

		unset aALLO_EXCLUDED_SERVICES_DURING_STOP

		#????????????????????????????????????????????????????????????????????????
		# Although this allows for simple service control without using SystemD, we really should convert these to SystemD services. To keep everything consistent, clean, and obtain a correct exit code.
		#DietPi: Non-service based control for specific dietpi-software installed programs.
		# - Start prority last
		index=0
		aDIETPISERVICE_FP=()
		aDIETPISERVICE_NAME=()
		aDIETPISERVICE_NAME[$index]='RaspimJpeg';aDIETPISERVICE_FP[$index]='/etc/dietpi/dietpi-software/services/raspimjpeg.service';((index++));
		aDIETPISERVICE_NAME[$index]='Deluge';aDIETPISERVICE_FP[$index]='/etc/dietpi/dietpi-software/services/deluge.service';((index++));
		aDIETPISERVICE_NAME[$index]='SqueezeBox Server';aDIETPISERVICE_FP[$index]='/etc/dietpi/dietpi-software/services/squeezeboxserver.service';((index++));

		for ((i=0; i<${#aDIETPISERVICE_NAME[@]}; i++))
		do

			if [ -f ${aDIETPISERVICE_FP[$i]} ]; then

				echo -e "${aDIETPISERVICE_NAME[$i]}"

				${aDIETPISERVICE_FP[$i]} $INPUT_MODE &> /dev/null
				Print_Status ${aDIETPISERVICE_NAME[$i]} $?

			fi

		done

		unset aDIETPISERVICE_NAME
		unset aDIETPISERVICE_FP
		#????????????????????????????????????????????????????????????????????????

		echo -e ""

		#Apply process tool settings
		if [ "$INPUT_MODE" = "start" ] ||
			[ "$INPUT_MODE" = "restart" ]; then

			/DietPi/dietpi/dietpi-process_tool 1

		fi

	#-----------------------------------------------------------------------------------
	#Invalid command
	else
		echo -e "\nDietPi-Services\nAvailable commands: start / stop / restart / enable / disable / status\n"
	fi
	#-----------------------------------------------------------------------------------
	rm "$FP_TEMP"
	unset aSERVICE_NAME
	unset aSERVICE_AVAILABLE
	#-----------------------------------------------------------------------------------
	exit
	#-----------------------------------------------------------------------------------
}
